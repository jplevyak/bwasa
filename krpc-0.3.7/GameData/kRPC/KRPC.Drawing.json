{
  "Drawing": {
    "documentation": "<doc>\n<summary>\nProvides functionality for drawing objects in the flight scene.\n</summary>\n<remarks>\nFor drawing and interacting with the user interface, see the UI service.\n</remarks>\n</doc>",
    "procedures": {
      "AddLine": {
        "parameters": [
          {
            "name": "start",
            "type": "KRPC.Tuple"
          },
          {
            "name": "end",
            "type": "KRPC.Tuple"
          },
          {
            "name": "referenceFrame",
            "type": "uint64"
          },
          {
            "name": "visible",
            "type": "bool",
            "default_value": "AQ=="
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "ParameterType(0).Tuple(double,double,double)",
          "ParameterType(1).Tuple(double,double,double)",
          "ParameterType(2).Class(SpaceCenter.ReferenceFrame)",
          "ReturnType.Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nDraw a line in the scene.\n</summary>\n<param name=\"start\">Position of the start of the line.</param>\n<param name=\"end\">Position of the end of the line.</param>\n<param name=\"referenceFrame\">Reference frame that the positions are in.</param>\n<param name=\"visible\">Whether the line is visible.</param>\n</doc>"
      },
      "AddDirection": {
        "parameters": [
          {
            "name": "direction",
            "type": "KRPC.Tuple"
          },
          {
            "name": "referenceFrame",
            "type": "uint64"
          },
          {
            "name": "length",
            "type": "float",
            "default_value": "AAAgQQ=="
          },
          {
            "name": "visible",
            "type": "bool",
            "default_value": "AQ=="
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "ParameterType(0).Tuple(double,double,double)",
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)",
          "ReturnType.Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nDraw a direction vector in the scene, from the center of mass of the active vessel.\n</summary>\n<param name=\"direction\">Direction to draw the line in.</param>\n<param name=\"referenceFrame\">Reference frame that the direction is in.</param>\n<param name=\"length\">The length of the line.</param>\n<param name=\"visible\">Whether the line is visible.</param>\n</doc>"
      },
      "AddPolygon": {
        "parameters": [
          {
            "name": "vertices",
            "type": "KRPC.List"
          },
          {
            "name": "referenceFrame",
            "type": "uint64"
          },
          {
            "name": "visible",
            "type": "bool",
            "default_value": "AQ=="
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "ParameterType(0).List(Tuple(double,double,double))",
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)",
          "ReturnType.Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nDraw a polygon in the scene, defined by a list of vertices.\n</summary>\n<param name=\"vertices\">Vertices of the polygon.</param>\n<param name=\"referenceFrame\">Reference frame that the vertices are in.</param>\n<param name=\"visible\">Whether the polygon is visible.</param>\n</doc>"
      },
      "AddText": {
        "parameters": [
          {
            "name": "text",
            "type": "string"
          },
          {
            "name": "referenceFrame",
            "type": "uint64"
          },
          {
            "name": "position",
            "type": "KRPC.Tuple"
          },
          {
            "name": "rotation",
            "type": "KRPC.Tuple"
          },
          {
            "name": "visible",
            "type": "bool",
            "default_value": "AQ=="
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)",
          "ParameterType(2).Tuple(double,double,double)",
          "ParameterType(3).Tuple(double,double,double,double)",
          "ReturnType.Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nDraw text in the scene.\n</summary>\n<param name=\"text\">The string to draw.</param>\n<param name=\"referenceFrame\">Reference frame that the text position is in.</param>\n<param name=\"position\">Position of the text.</param>\n<param name=\"rotation\">Rotation of the text, as a quaternion.</param>\n<param name=\"visible\">Whether the text is visible.</param>\n</doc>"
      },
      "Clear": {
        "parameters": [
          {
            "name": "clientOnly",
            "type": "bool",
            "default_value": "AA=="
          }
        ],
        "attributes": [],
        "documentation": "<doc>\n<summary>\nRemove all objects being drawn.\n</summary>\n<param name=\"clientOnly\">If true, only remove objects created by the calling client.</param>\n</doc>"
      },
      "Line_Remove": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Method(Drawing.Line,Remove)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nRemove the object.\n</summary>\n</doc>"
      },
      "Line_get_Start": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Line,Start)",
          "ParameterType(0).Class(Drawing.Line)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nStart position of the line.\n</summary>\n</doc>"
      },
      "Line_set_Start": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,Start)",
          "ParameterType(0).Class(Drawing.Line)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nStart position of the line.\n</summary>\n</doc>"
      },
      "Line_get_End": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Line,End)",
          "ParameterType(0).Class(Drawing.Line)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nEnd position of the line.\n</summary>\n</doc>"
      },
      "Line_set_End": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,End)",
          "ParameterType(0).Class(Drawing.Line)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nEnd position of the line.\n</summary>\n</doc>"
      },
      "Line_get_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Line,Color)",
          "ParameterType(0).Class(Drawing.Line)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Line_set_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,Color)",
          "ParameterType(0).Class(Drawing.Line)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Line_get_Thickness": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "float",
        "attributes": [
          "Class.Property.Get(Drawing.Line,Thickness)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nSet the thickness\n</summary>\n</doc>"
      },
      "Line_set_Thickness": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,Thickness)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nSet the thickness\n</summary>\n</doc>"
      },
      "Line_get_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "Class.Property.Get(Drawing.Line,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Line)",
          "ReturnType.Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Line_set_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Line)",
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Line_get_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "bool",
        "attributes": [
          "Class.Property.Get(Drawing.Line,Visible)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Line_set_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,Visible)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Line_get_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "string",
        "attributes": [
          "Class.Property.Get(Drawing.Line,Material)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      },
      "Line_set_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Line,Material)",
          "ParameterType(0).Class(Drawing.Line)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      },
      "Polygon_Remove": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Method(Drawing.Polygon,Remove)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nRemove the object.\n</summary>\n</doc>"
      },
      "Polygon_get_Vertices": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.List",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,Vertices)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ReturnType.List(Tuple(double,double,double))"
        ],
        "documentation": "<doc>\n<summary>\nVertices for the polygon.\n</summary>\n</doc>"
      },
      "Polygon_set_Vertices": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.List"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,Vertices)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ParameterType(1).List(Tuple(double,double,double))"
        ],
        "documentation": "<doc>\n<summary>\nVertices for the polygon.\n</summary>\n</doc>"
      },
      "Polygon_get_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,Color)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Polygon_set_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,Color)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Polygon_get_Thickness": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "float",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,Thickness)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nSet the thickness\n</summary>\n</doc>"
      },
      "Polygon_set_Thickness": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,Thickness)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nSet the thickness\n</summary>\n</doc>"
      },
      "Polygon_get_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ReturnType.Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Polygon_set_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Polygon)",
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Polygon_get_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "bool",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,Visible)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Polygon_set_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,Visible)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Polygon_get_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "string",
        "attributes": [
          "Class.Property.Get(Drawing.Polygon,Material)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      },
      "Polygon_set_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Polygon,Material)",
          "ParameterType(0).Class(Drawing.Polygon)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      },
      "Text_Remove": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Method(Drawing.Text,Remove)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nRemove the object.\n</summary>\n</doc>"
      },
      "Text_get_Position": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Position)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nPosition of the text.\n</summary>\n</doc>"
      },
      "Text_set_Position": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Position)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nPosition of the text.\n</summary>\n</doc>"
      },
      "Text_get_Rotation": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Rotation)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Tuple(double,double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nRotation of the text as a quaternion.\n</summary>\n</doc>"
      },
      "Text_set_Rotation": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Rotation)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Tuple(double,double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nRotation of the text as a quaternion.\n</summary>\n</doc>"
      },
      "Text_get_AvailableFonts": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.List",
        "attributes": [
          "Class.Property.Get(Drawing.Text,AvailableFonts)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.List(string)"
        ],
        "documentation": "<doc>\n<summary>\nA list of all available fonts.\n</summary>\n</doc>"
      },
      "Text_get_Content": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "string",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Content)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nThe text string\n</summary>\n</doc>"
      },
      "Text_set_Content": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Content)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nThe text string\n</summary>\n</doc>"
      },
      "Text_get_Font": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "string",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Font)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nName of the font\n</summary>\n</doc>"
      },
      "Text_set_Font": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Font)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nName of the font\n</summary>\n</doc>"
      },
      "Text_get_Size": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "int32",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Size)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nFont size.\n</summary>\n</doc>"
      },
      "Text_set_Size": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "int32"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Size)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nFont size.\n</summary>\n</doc>"
      },
      "Text_get_CharacterSize": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "float",
        "attributes": [
          "Class.Property.Get(Drawing.Text,CharacterSize)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nCharacter size.\n</summary>\n</doc>"
      },
      "Text_set_CharacterSize": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,CharacterSize)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nCharacter size.\n</summary>\n</doc>"
      },
      "Text_get_Style": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "int32",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Style)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Enum(UI.FontStyle)"
        ],
        "documentation": "<doc>\n<summary>\nFont style.\n</summary>\n</doc>"
      },
      "Text_set_Style": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "int32"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Style)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Enum(UI.FontStyle)"
        ],
        "documentation": "<doc>\n<summary>\nFont style.\n</summary>\n</doc>"
      },
      "Text_get_Alignment": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "int32",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Alignment)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Enum(UI.TextAlignment)"
        ],
        "documentation": "<doc>\n<summary>\nAlignment.\n</summary>\n</doc>"
      },
      "Text_set_Alignment": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "int32"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Alignment)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Enum(UI.TextAlignment)"
        ],
        "documentation": "<doc>\n<summary>\nAlignment.\n</summary>\n</doc>"
      },
      "Text_get_LineSpacing": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "float",
        "attributes": [
          "Class.Property.Get(Drawing.Text,LineSpacing)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nLine spacing.\n</summary>\n</doc>"
      },
      "Text_set_LineSpacing": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "float"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,LineSpacing)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nLine spacing.\n</summary>\n</doc>"
      },
      "Text_get_Anchor": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "int32",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Anchor)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Enum(UI.TextAnchor)"
        ],
        "documentation": "<doc>\n<summary>\nAnchor.\n</summary>\n</doc>"
      },
      "Text_set_Anchor": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "int32"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Anchor)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Enum(UI.TextAnchor)"
        ],
        "documentation": "<doc>\n<summary>\nAnchor.\n</summary>\n</doc>"
      },
      "Text_get_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "KRPC.Tuple",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Color)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Text_set_Color": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "KRPC.Tuple"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Color)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Tuple(double,double,double)"
        ],
        "documentation": "<doc>\n<summary>\nSet the color\n</summary>\n</doc>"
      },
      "Text_get_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "uint64",
        "attributes": [
          "Class.Property.Get(Drawing.Text,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Text)",
          "ReturnType.Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Text_set_ReferenceFrame": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "uint64"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,ReferenceFrame)",
          "ParameterType(0).Class(Drawing.Text)",
          "ParameterType(1).Class(SpaceCenter.ReferenceFrame)"
        ],
        "documentation": "<doc>\n<summary>\nReference frame for the positions of the object.\n</summary>\n</doc>"
      },
      "Text_get_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "bool",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Visible)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Text_set_Visible": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "bool"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Visible)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nWhether the object is visible.\n</summary>\n</doc>"
      },
      "Text_get_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          }
        ],
        "return_type": "string",
        "attributes": [
          "Class.Property.Get(Drawing.Text,Material)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      },
      "Text_set_Material": {
        "parameters": [
          {
            "name": "this",
            "type": "uint64"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "attributes": [
          "Class.Property.Set(Drawing.Text,Material)",
          "ParameterType(0).Class(Drawing.Text)"
        ],
        "documentation": "<doc>\n<summary>\nMaterial used to render the object.\nCreates the material from a shader with the given name.\n</summary>\n</doc>"
      }
    },
    "classes": {
      "Line": {
        "documentation": "<doc>\n<summary>\nA line. Created using <see cref=\"M:Drawing.AddLine\" />.\n</summary>\n</doc>"
      },
      "Polygon": {
        "documentation": "<doc>\n<summary>\nA polygon. Created using <see cref=\"M:Drawing.AddPolygon\" />.\n</summary>\n</doc>"
      },
      "Text": {
        "documentation": "<doc>\n<summary>\nText. Created using <see cref=\"M:Drawing.AddText\" />.\n</summary>\n</doc>"
      }
    },
    "enumerations": {}
  }
}